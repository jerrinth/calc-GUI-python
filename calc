from tkinter import *
import math

root = Tk()
root.title("CALCULATOR")
root.configure(bg="BLACK")
#root.iconbitmap('lack lion.ico')
#working of operators
def button_click(arg):
    var=entry_tabel.get()
    value=str(var)+str(arg)
    entry_tabel.delete(0,END)
    entry_tabel.insert(0,value)
def add():
    global firstnumber,symbol
    symbol="+"
    firstnumber=float(entry_tabel.get())
    entry_tabel.delete(0,END)
def minus():
    global firstnumber,symbol
    symbol="-"
    firstnumber=float(entry_tabel.get())
    entry_tabel.delete(0,END)
def multi():
    global firstnumber,symbol
    symbol="*"
    firstnumber=float(entry_tabel.get())
    entry_tabel.delete(0,END)
def divide():
    global firstnumber,symbol
    symbol="/"
    firstnumber=float(entry_tabel.get())
    entry_tabel.delete(0,END)
def p():
    global firstnumber,symbol
    symbol="pow"
    firstnumber=float(entry_tabel.get())
    entry_tabel.delete(0,END)
def sqrt():
    global firstnumber,symbol
    symbol="sqrt"
    firstnumber=float(entry_tabel.get())
def expo():
    global firstnumber,symbol
    symbol="expo"
    firstnumber=float(entry_tabel.get())
def reci():
    global firstnumber,symbol
    symbol="reci"
    firstnumber=float(entry_tabel.get())
def fact():
    global firstnumber,symbol
    symbol="fact"
    firstnumber=int(entry_tabel.get())
def sine():
    global firstnumber,symbol
    symbol="sine"
    firstnumber=float(entry_tabel.get())
def cosine():
    global firstnumber,symbol
    symbol="cosine"
    firstnumber=float(entry_tabel.get())
def tan():
    global firstnumber,symbol
    symbol="tan"
    firstnumber=float(entry_tabel.get())
def invsine():
    global firstnumber,symbol
    symbol="inv-sin"
    firstnumber=float(entry_tabel.get())
def invcosine():
    global firstnumber,symbol
    symbol="inv-cosine"
    firstnumber=float(entry_tabel.get())
def invtangent():
    global firstnumber,symbol
    symbol="inv-tangent"
    firstnumber=float(entry_tabel.get())
def npr():
    global firstnumber,symbol
    symbol="npr"
    firstnumber=int(entry_tabel.get())
    entry_tabel.delete(0,END)
def ncr():
    global firstnumber,symbol
    symbol="ncr"
    firstnumber=int(entry_tabel.get())
    entry_tabel.delete(0,END)
def sum_x():
    global firstnumber,symbol
    symbol="sum_x"
    firstnumber=int(entry_tabel.get())
def sum_sqx():
    global firstnumber,symbol
    symbol="sum_sqx"
    firstnumber=int(entry_tabel.get())
def sum_cubx():
    global firstnumber,symbol
    symbol="sum_cubx"
    firstnumber=int(entry_tabel.get())
def log10x():
    global firstnumber,symbol
    symbol="log10x"
    firstnumber=float(entry_tabel.get())
def lnx():
    global firstnumber,symbol
    symbol="lnx"
    firstnumber=float(entry_tabel.get())
def logbx():
    global firstnumber,symbol
    symbol="logbx"
    firstnumber=float(entry_tabel.get())
    entry_tabel.delete(0,END)
def _10x():
    global firstnumber,symbol
    symbol="10x"
    firstnumber=float(entry_tabel.get())
def cubrtx():
    global firstnumber,symbol
    symbol="cubrtx"
    firstnumber=float(entry_tabel.get())
def nthrtx():
    global firstnumber,symbol
    symbol="nthrtx"
    firstnumber=float(entry_tabel.get())
    entry_tabel.delete(0,END)
def dot():
    a=entry_tabel.get()
    entry_tabel.delete(0,END)
    entry_tabel.insert(0,str(a)+".")
def back():
    length = len(entry_tabel.get())
    reval = entry_tabel.get()[:length-1]
    entry_tabel.delete(0,END)
    entry_tabel.insert(0,reval)
def equal():
    secondnumber=float(entry_tabel.get())
    entry_tabel.delete(0,END)
    if symbol=="+":
        tot=firstnumber+secondnumber
    elif symbol=="-":
        tot=firstnumber-secondnumber
    elif symbol=="*":
        tot=firstnumber*secondnumber
    elif symbol=="/":
        tot=firstnumber/secondnumber
    elif symbol=="pow":
        tot=pow(firstnumber,secondnumber)
    elif symbol=="expo":
        tot=pow(2.718,firstnumber)
    elif symbol=="reci":
        tot=1/firstnumber
    elif symbol=="fact":
        tot=math.factorial(firstnumber)        
    elif symbol=="sine":
        tot=math.sin(firstnumber)
    elif symbol=="cosine":
        tot=math.cos(firstnumber)
    elif symbol=="tan":
        tot=math.tan(firstnumber)
    elif symbol=="inv-sin":
        tot=math.asin(firstnumber)
    elif symbol=="inv-cosine":
        tot=math.acos(firstnumber)
    elif symbol=="inv-tangent":
        tot=math.atan(firstnumber)
    elif symbol=="npr":
        n=math.factorial(firstnumber)
        p=firstnumber-secondnumber
        r=math.factorial(p)
        tot=n/r
    elif symbol=="ncr":
        n=math.factorial(firstnumber)
        p=firstnumber-secondnumber
        r=math.factorial(p)
        q=math.factorial(secondnumber)
        tot=n/(r*q)
    elif symbol=="sum_x":
        tot=(firstnumber*(firstnumber+1))/2  
    elif symbol=="sum_sqx":
        n=firstnumber*(firstnumber+1)*((2*firstnumber)+1)
        tot=n/6
    elif symbol=="sum_cubx":
        n=(firstnumber*(firstnumber+1))/2
        tot=pow(n,2)
    elif symbol=="log10x":
        tot=math.log10(firstnumber)
    elif symbol=="lnx":
        tot=math.log(firstnumber)
    elif symbol=="logbx":
        tot=math.log(firstnumber,secondnumber)     
    elif symbol=="10x":
        tot=pow(10,firstnumber)
    elif symbol=="cubrtx":
        n=1/3
        tot=pow(firstnumber,n)
    elif symbol=="nthrtx":
        n=1/firstnumber
        tot=pow(secondnumber,n)
    elif symbol=="sqrt":
        entry_tabel.delete(0,END)
        tot = math.sqrt(firstnumber)
    entry_tabel.insert(0,tot)

def button_clear():
    entry_tabel.delete(0,END)
    global firstnumber,secondnumber
    firstnumber=0
    secondnumber=0
#buttons
entry_tabel = Entry(root,borderwidth=16,width=63,bg="BLACK",fg="SNOW")
button_1=Button(root,text="1",padx=26,pady=15,command = lambda :button_click(1),bg="NAVYBLUE",fg="WHITE",font=30)
button_2=Button(root,text="2",padx=26,pady=15,command = lambda :button_click(2),bg="NAVYBLUE",fg="WHITE",font=30)
button_3=Button(root,text="3",padx=26,pady=15,command = lambda :button_click(3),bg="NAVYBLUE",fg="WHITE",font=30)
button_4=Button(root,text="4",padx=26,pady=15,command = lambda :button_click(4),bg="NAVYBLUE",fg="WHITE",font=30)
button_5=Button(root,text="5",padx=26,pady=15,command = lambda :button_click(5),bg="NAVYBLUE",fg="WHITE",font=30)
button_6=Button(root,text="6",padx=26,pady=15,command = lambda :button_click(6),bg="NAVYBLUE",fg="WHITE",font=30)
button_7=Button(root,text="7",padx=26,pady=15,command = lambda :button_click(7),bg="NAVYBLUE",fg="WHITE",font=30)
button_8=Button(root,text="8",padx=26,pady=15,command = lambda :button_click(8),bg="NAVYBLUE",fg="WHITE",font=30)
button_9=Button(root,text="9",padx=26,pady=15,command = lambda :button_click(9),bg="NAVYBLUE",fg="WHITE",font=30)
button_0=Button(root,text="0",padx=26,pady=15,command = lambda :button_click(0),bg="NAVYBLUE",fg="WHITE",font=30)
button_plus=Button(root,text="+",padx=26,pady=15,command = add,bg="NAVYBLUE",fg="DEEPPINK",font=30)
button_minus=Button(root,text="-",padx=28,pady=15,command = minus,bg="NAVYBLUE",fg="DEEPPINK",font=40)
button_multiply=Button(root,text="*",padx=28,pady=15,command =multi,bg="NAVYBLUE",fg="DEEPPINK",font=30)
button_divide=Button(root,text="/",padx=29,pady=15,command = divide,bg="NAVYBLUE",fg="DEEPPINK",font=30)
button_dot=Button(root,text=".",padx=29,pady=15,command=dot,bg="NAVYBLUE",fg="DEEPPINK",font=30)
button_pow=Button(root,text="pow",padx=16,pady=15,command = p,bg="NAVYBLUE",fg="YELLOW",font=30)
button_sqrt=Button(root,text="sqrt",padx=18,pady=15,command = sqrt,bg="NAVYBLUE",fg="YELLOW",font=30)
button_exponential=Button(root,text="expo",padx=14,pady=15,command=expo,bg="NAVYBLUE",fg="YELLOW",font=30)
button_reciprocal=Button(root,text="1/x",padx=21,pady=15,command=reci,bg="NAVYBLUE",fg="YELLOW",font=30)
button_fact=Button(root,text="x!",padx=25,pady=15,command=fact,bg="NAVYBLUE",fg="YELLOW",font=30)
button_sine=Button(root,text="sinx",padx=22,pady=15,command=sine,bg="NAVYBLUE",fg="YELLOW",font=30)
button_cosine=Button(root,text="cosx",padx=19,pady=15,command=cosine,bg="NAVYBLUE",fg="YELLOW",font=30)
button_tan=Button(root,text="tanx",padx=21,pady=15,command=tan,bg="NAVYBLUE",fg="YELLOW",font=30)
button_invsine=Button(root,text="inv-sin",padx=25,pady=15,command=invsine,bg="NAVYBLUE",fg="YELLOW",font=30)
button_invcosine=Button(root,text="inv-cos",padx=23,pady=15,command=invcosine,bg="NAVYBLUE",fg="YELLOW",font=30)
button_invtangent=Button(root,text="inv-tan",padx=25,pady=15,command=invtangent,bg="NAVYBLUE",fg="YELLOW",font=30)
button_npr=Button(root,text="nPr",padx=19,pady=15,command=npr,bg="NAVYBLUE",fg="YELLOW",font=30)
button_ncr=Button(root,text="nCr",padx=18,pady=15,command=ncr,bg="NAVYBLUE",fg="YELLOW",font=30)
button_sum_x=Button(root,text="s-x",padx=21,pady=15,command=sum_x,bg="NAVYBLUE",fg="YELLOW",font=30)
button_sum_sq_x=Button(root,text="s-sqX",padx=27,pady=15,command=sum_sqx,bg="NAVYBLUE",fg="YELLOW",font=30)
button_sum_cub_x=Button(root,text="s-cubX",padx=23,pady=15,command=sum_cubx,bg="NAVYBLUE",fg="YELLOW",font=30)
button_log10x=Button(root,text="log10_X",padx=18,pady=15,command=log10x,bg="NAVYBLUE",fg="YELLOW",font=30)
button_lnx=Button(root,text="lnX",padx=24,pady=15,command=lnx,bg="NAVYBLUE",fg="YELLOW",font=30)
button_logbx=Button(root,text="logb_X",padx=22,pady=15,command=logbx,bg="NAVYBLUE",fg="YELLOW",font=30)
button_10x=Button(root,text="10^X",padx=13,pady=15,command=_10x,bg="NAVYBLUE",fg="YELLOW",font=28)
button_cubrtx=Button(root,text="cub-rtX",padx=10,pady=15,command=cubrtx,bg="NAVYBLUE",fg="YELLOW",font=24)
button_nthrtx=Button(root,text="Nth-rtX",padx=23,pady=15,command=nthrtx,bg="NAVYBLUE",fg="YELLOW",font=30)
button_clear=Button(root,text="clear",padx=18,pady=15,command=button_clear,bg="NAVYBLUE",fg="SADDLEBROWN",font=30)
button_enter=Button(root,text="=",padx=31,pady=15,command=equal,bg="NAVYBLUE",fg="SADDLEBROWN",font=30)
button_back=Button(root,text="back",padx=18,pady=15,command=back,bg="NAVYBLUE",fg="SADDLEBROWN",font=30)
#packing
entry_tabel.grid(columnspan=6)
button_1.grid(row=1,column=0)
button_2.grid(row=1,column=1)
button_3.grid(row=1,column=2)
button_4.grid(row=2,column=0)
button_5.grid(row=2,column=1)
button_6.grid(row=2,column=2)
button_7.grid(row=3,column=0)
button_8.grid(row=3,column=1)
button_9.grid(row=3,column=2)
button_0.grid(row=4,column=1)
button_plus.grid(row=5,column=1)
button_minus.grid(row=6,column=1)
button_multiply.grid(row=5,column=2)
button_divide.grid(row=6,column=2)
button_clear.grid(row=6,column=3)
button_exponential.grid(row=8,column=1)
button_fact.grid(row=8,column=0)
button_reciprocal.grid(row=6,column=0)
button_sine.grid(row=1,column=3)
button_cosine.grid(row=2,column=3)
button_tan.grid(row=3,column=3)
button_invsine.grid(row=3,column=4)
button_invcosine.grid(row=4,column=4)
button_invtangent.grid(row=5,column=4)
button_npr.grid(row=7,column=1)
button_ncr.grid(row=7,column=0)
button_sum_x.grid(row=7,column=2)
button_sum_sq_x.grid(row=2,column=4)
button_sum_cub_x.grid(row=1,column=4)
button_log10x.grid(row=7,column=4)
button_lnx.grid(row=7,column=3)
button_logbx.grid(row=6,column=4)
button_10x.grid(row=8,column=2)
button_cubrtx.grid(row=8,column=3)
button_nthrtx.grid(row=8,column=4)
button_dot.grid(row=4,column=2)
button_enter.grid(row=5,column=3)
button_back.grid(row=4,column=3)
button_pow.grid(row=4,column=0)
button_sqrt.grid(row=5,column=0)

root.mainloop()

